import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

df = pd.read_csv('/content/data_of_oilcompany_delt_.csv', error_bad_lines=False,sep=';')

scaler = StandardScaler()

df


#Подготовим данные, исключив категориальные столбцы:

categorical_columns = ['Название', 'Расположение', 'Группа']
numerical_data = df.drop(categorical_columns, axis=1)

#Затем стандартизируем только числовые столбцы:
scaler = StandardScaler()
numerical_data_scaled = scaler.fit_transform(numerical_data)


#Объединим стандартизированные числовые столбцы с категориальными столбцами:

data_scaled = np.concatenate((numerical_data_scaled, df[categorical_columns].values), axis=1)

kmeans_kwargs = {"init": "random", "n_init": 10, "random_state": 1}
sse = []
for k in range(1, 11):
   kmeans = KMeans(n_clusters=k, **kmeans_kwargs)
   kmeans.fit(numerical_data_scaled)
   sse.append(kmeans.inertia_)

plt.title("Метод локтя")
plt.plot(range(1, 11), sse)
plt.xticks(range(1, 11))
plt.xlabel("Number of Clusters")
plt.ylabel("SSE")
plt.show()

import pandas as pd
from sklearn.preprocessing import StandardScaler

data = pd.read_csv('/content/data_of_oilcompany__delta_.csv', error_bad_lines=False,sep=';')

# Нормализация данных
scaler = StandardScaler()
data = scaler.fit_transform(data)

from sklearn.cluster import KMeans
# Создание модели KMeans
kmeans = KMeans(n_clusters=3)
# Обучение модели на данных
kmeans.fit(data)

# Получение меток кластеров для каждого образца
labels = kmeans.labels_

cluster_centers = kmeans.cluster_centers_
for i, center in enumerate(cluster_centers):
  print(f"Cluster {i}: {center}")


import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

data = pd.read_csv('/content/data_of_oilcompany__delta_.csv', error_bad_lines=False, sep=';')

# Нормализация данных
scaler = StandardScaler()
data_normalized = scaler.fit_transform(data)

# Создание и обучение модели KMeans
kmeans = KMeans(n_clusters=4)
kmeans.fit(data_normalized)
labels = kmeans.labels_

# Добавление меток кластеров к исходным данным
data['cluster'] = labels

# Визуализация результатов кластеризации
plt.scatter(data.iloc[:, 2], data.iloc[:, 12], c=data['cluster'], cmap='viridis')
plt.scatter(kmeans.cluster_centers_[:, 8], kmeans.cluster_centers_[:, 1])
plt.title('Кластеризация данных')
plt.xlabel('Признак 1')
plt.ylabel('Признак 2')
plt.show()

# Вывод центров кластеров
print("Центры кластеров:")
print(kmeans.cluster_centers_)
